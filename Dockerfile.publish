# Stage de build
FROM php:alpine AS build

# Atualização e instalação de pacotes essenciais + extensões PHP necessárias
RUN apk update && apk upgrade && \
    apk add --no-cache bash nano zip wget git curl unzip ca-certificates && \
    update-ca-certificates && \
    docker-php-ext-install mysqli xml curl gd

# Copiando os temas dos containers existentes
COPY --chown=www-data:www-data --from=internetdsa/pa-theme-sedes /var/www/build /var/www/build/themes/pa-theme-sedes
COPY --chown=www-data:www-data --from=internetdsa/pa-theme-sedes-child /var/www/build /var/www/build/themes/pa-theme-sedes-child

# Copiando o WP-CLI
COPY --from=wordpress:cli-php8.1 /usr/local/bin/wp /usr/local/bin/wp

# Corrigindo permissões dos temas
RUN find /var/www/build/themes/ -type d -exec chmod 755 {} \; \
 && find /var/www/build/themes/ -type f -exec chmod 644 {} \;

# Chave do ACF Pro (warning: Docker alerta sobre ARG sensível)
ARG ACF_KEY

# Baixando plugins
RUN mkdir -p /var/www/build/plugins \
 && curl -s "https://connect.advancedcustomfields.com/v2/plugins/download?p=pro&k=${ACF_KEY}" -o /var/www/build/plugins/advanced-custom-fields-pro.zip \
 && curl -s "https://codeload.github.com/cloudflare/Cloudflare-WordPress/zip/refs/heads/master" -o /var/www/build/plugins/cloudflare.zip

# Criando diretórios do WordPress
RUN mkdir -p /var/www/build/wp/pt_BR /var/www/build/wp/es_ES

# Função para configurar WP para cada locale
RUN set -ex && \
    for locale in pt_BR es_ES; do \
        echo "Configurando WordPress $locale"; \
        cd /var/www/build/wp/$locale; \
        wp core download --locale=$locale --allow-root || echo "WP $locale download falhou, continuando"; \
        rm -rf wp-content/themes/* && touch wp-content/themes/index.php; \
        rm -rf wp-content/plugins/* && touch wp-content/plugins/index.php; \
        cp -a /var/www/build/themes/* wp-content/themes/; \
        cp -a /var/www/build/plugins/* wp-content/plugins/; \
        cd wp-content/plugins/; \
        for z in ./*.zip; do [ -f "$z" ] && unzip -qq "$z" -d . || true; done; \
        rm -f *.zip; \
        [ -d "Cloudflare-WordPress-master" ] && mv Cloudflare-WordPress-master cloudflare; \
    done

# Gerando ZIPs dos WordPress
RUN cd /var/www/build/wp && \
    for d in *; do zip -rqq "$d.zip" "$d"; done

# Gerando ZIPs dos temas
RUN cd /var/www/build/themes && \
    for d in *; do zip -rqq "$d.zip" "$d"; done

# Organizando arquivos finais na pasta /dist
RUN mkdir -p /var/www/dist/plugins /var/www/dist/themes /var/www/dist/wp && \
    cp /var/www/build/plugins/*.zip /var/www/dist/plugins && \
    cp /var/www/build/themes/*.zip /var/www/dist/themes && \
    cp /var/www/build/wp/*.zip /var/www/dist/wp

# Imagem final com Apache
FROM httpd:latest

# Copiando arquivos gerados
COPY --from=build /var/www/dist /usr/local/apache2/htdocs/

# Remove index.html padrão e adiciona health check
RUN rm -f /usr/local/apache2/htdocs/index.html \
 && touch /usr/local/apache2/htdocs/health.html
